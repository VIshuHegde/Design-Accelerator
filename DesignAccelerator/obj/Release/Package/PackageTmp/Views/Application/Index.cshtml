@using DesignAccelerator.Models.ViewModel
@model ApplicationViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="navbar-static-top">
    <ul class="breadcrumb"></ul>
</div>
<h2>Application Details</h2>
<hr />

<div class="row">
    <div class="col-md-8">
        <section id="ApplicationForm">
            @using (Html.BeginForm("Index", "Application", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.ProjectID)
                @Html.HiddenFor(m=>m.ClientId)
                <div class="form-group">
                    @Html.Label("Application Name", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ApplicationName, new { @maxlength = "50", @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(m => m.ApplicationName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.AppVersion, "Application Version", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <span class="form-inline">
                            @Html.DropDownListFor(m => m.AppVersionId, new SelectList(Model.lstAppVersion, "Id ", "AppVersion"), "--Select--", new { @class = "form-control", @required = "Required" })
                            &nbsp;&nbsp;<a href="@Url.Action("Index", "AppVersion")">Add App Version</a>
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.BankTypeList, "Bank Type", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.BankType, new SelectList(Model.BankTypeList, "Value", "Key"), "--Select--", new { @class = "form-control", @required = "Required" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="btnSave" type="submit" value="Add" name="action:Add" class="btn btn-default" />
                        @*<input type="submit" value="Cancel" onclick="Cancel()" class="btn btn-default" />*@
                    </div>
                </div>
            }
        </section>
    </div>
</div>
<hr />

@{
    IEnumerable<ApplicationViewModel> Applicationviewmodel2 = ViewData["Applicationviewmodel1"] as IEnumerable<ApplicationViewModel>;
}
<div style="width:70%;">
    @{
        WebGrid grid = new WebGrid(Applicationviewmodel2);
        @grid.GetHtml(
              tableStyle: "table table-bordered table-hover",
              fillEmptyRows: false,
              headerStyle: "gvHeading",
              alternatingRowStyle: "gvAlternateRow",
              rowStyle: "gvRow",
              footerStyle: "gvFooter",
              mode: WebGridPagerModes.All,
              firstText: "<< First",
              previousText: "< Prev",
              nextText: "Next >",
              lastText: "Last >>",
              columns: new[] {
                                grid.Column(header: "S.No.", format: item => item.WebGrid.Rows.IndexOf(item) + 1 + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage) * grid.RowsPerPage * grid.PageIndex, canSort:true),
                                grid.Column("ApplicationName",header: "Application Name",canSort:true,format: (item) => Html.ActionLink(((string)item.ApplicationName), "Index", "Module", new { id = item.ApplicationID }, null)),
                                grid.Column("AppVersion",header: "App Version",canSort:true),
                                grid.Column("BankTypeName",header: "Bank Type",canSort:true),
                                grid.Column("ApplicationID",header:"Edit/Delete",canSort:false,
                                 format: @<text>
                                    @Html.ActionLink("Edit |", "Edit", new { id=item.ApplicationID})
                                    @Html.ActionLink("Delete", "Delete", new { id=item.ApplicationID})
                                </text>
                                            )
                               }
                     )
    }
</div>

@section Scripts {
    <script type="text/javascript">
        //function Cancel() {
        //    $("ApplicationName").val = '';
        //}

        $(document).ready(function () {
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Client")"><span>' + "@Model.ClientName" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Project", new {id = Model.ClientId })"><span>' + "@Model.ProjectName" + '</span></a></li>');
        });



    </script>
    @if (ViewBag.Message != null)
    {
        <script>

            alert('@ViewBag.Message');
            $("#ApplicationName").val("");
            $('#AppVersionId').find('option:first').attr('selected', 'selected');
            $('#BankType').find('option:first').attr('selected', 'selected');
             
        </script>
    }
}

